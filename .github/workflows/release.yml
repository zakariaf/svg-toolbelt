name: Release & Publish

on:
  release:
    types: [published]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run type check
        run: npm run type-check

      - name: Run tests
        run: npm test -- --run --coverage

      - name: Build package
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 1

  publish:
    name: Publish to NPM
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Verify package version matches release tag
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          RELEASE_TAG=${GITHUB_REF#refs/tags/}

          # Remove 'v' prefix from tag if present
          RELEASE_VERSION=${RELEASE_TAG#v}

          echo "Package version: $PACKAGE_VERSION"
          echo "Release version: $RELEASE_VERSION"

          if [ "$PACKAGE_VERSION" != "$RELEASE_VERSION" ]; then
            echo "‚ùå Version mismatch: package.json ($PACKAGE_VERSION) != release tag ($RELEASE_VERSION)"
            exit 1
          fi

          echo "‚úÖ Version match confirmed"

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Notify successful publish
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "üöÄ Successfully published svg-toolbelt@$PACKAGE_VERSION to NPM!"
          echo "üì¶ NPM: https://www.npmjs.com/package/svg-toolbelt"
          echo "üì• Install: npm install svg-toolbelt@$PACKAGE_VERSION"

  update-demo:
    name: Update Demo Site
    needs: publish
    runs-on: ubuntu-latest
    if: github.repository == 'zakariaf/svg-toolbelt'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main  # Explicitly checkout main branch instead of the tag

      - name: Update demo to use latest version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          BRANCH_NAME="update-demo-v$PACKAGE_VERSION"

          echo "üì¶ Updating demo to use svg-toolbelt@$PACKAGE_VERSION"

          # Update the demo HTML file to use the new version (Linux sed syntax)
          sed -i "s|svg-toolbelt@[0-9]\+\.[0-9]\+\.[0-9]\+|svg-toolbelt@$PACKAGE_VERSION|g" docs/index.html
          sed -i "s|v[0-9]\+\.[0-9]\+\.[0-9]\+|v$PACKAGE_VERSION|g" docs/index.html

          # Show what changed
          echo "‚úÖ Updated version references:"
          grep -n "svg-toolbelt@\|v[0-9]" docs/index.html || echo "No version references found"

          # Check if there were any changes
          if git diff --quiet; then
            echo "‚ÑπÔ∏è  No changes needed in demo site"
            exit 0
          fi

          echo "üìù Changes detected, creating branch and PR..."

          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Create and switch to new branch
          git checkout -b "$BRANCH_NAME"

          # Commit changes
          git add docs/index.html
          git commit -m "docs: update demo to use svg-toolbelt@$PACKAGE_VERSION"

          # Push the branch
          git push origin "$BRANCH_NAME"

          echo "üåü Branch '$BRANCH_NAME' created and pushed"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          branch: update-demo-${{ github.ref_name }}
          title: "docs: update demo to use svg-toolbelt@${{ github.ref_name }}"
          body: |
            ## üöÄ Auto-generated PR: Update Demo Site

            This PR updates the demo site to use the latest published version of svg-toolbelt.

            ### Changes
            - Updated `docs/index.html` to reference `svg-toolbelt@${{ github.ref_name }}`
            - Ensures demo site uses the latest published package version

            ### Context
            - Triggered by release: ${{ github.ref_name }}
            - Published package: https://www.npmjs.com/package/svg-toolbelt

            This PR can be merged automatically or reviewed first based on your preferences.
          labels: |
            documentation
            automated
          assignees: zakariaf
          reviewers: zakariaf
